import { Document } from 'mongoose';
import IPhasesDocument from '../../../proposals/server/interfaces/IPhasesDocument';
import IProposalDocument from '../../../proposals/server/interfaces/IProposalDocument';
import IUserDocument from '../../../users/server/interfaces/IUserDocument';

export interface IOpportunityDocument extends Document {
	code: string;
	opportunityTypeCd: string;
	name: string;
	description: string;
	background: string;
	github: string;
	views: number;
	program: string;
	project: string;
	status: string;
	onsite: string;
	location: string;
	isPublished: boolean;
	wasPublished: boolean;
	lastPublished: Date;
	deadline: Date;
	created: Date;
	createdBy: IUserDocument;
	updated: Date;
	updatedBy: IUserDocument;
	issueUrl: string;
	issueNumber: string;
	assignment: Date;
	proposal: IProposalDocument;
	phases: IPhasesDocument;
	budget: number;
	isDocConflictOfInterest: boolean;
	isDocNonDisclosure: boolean;
	isDocRequestForReferences: boolean;
	terms: string;
	questions: [string];
	evaluationStage: number;
	numberOfInterviews: number;
	weights: any;
	watchers: IUserDocument[];
	addenda: any[];
	teamQuestions: any[];
	teamQuestionGradingType: any;
	intermediateApproval: any;
	finalApproval: any;
	contract: any;
	approvalRequired: boolean;
	isApproved: boolean;
	assignor?: IUserDocument;
	assignoremail?: string;
	proposalEmail?: string;
}
